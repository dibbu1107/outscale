{"ast":null,"code":"var _jsxFileName = \"/Users/divyanitesh/Desktop/floData/GoogleDocs/client/src/TextEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from \"socket.io-client\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport QuillCursors from \"quill-cursors\";\n\n// Time interval for periodically saving the document to the server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAVE_INTERVAL_MS = 2000;\n\n// Options for the Quill editor's toolbar configuration\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"image\", \"blockquote\", \"code-block\"], [\"clean\"]];\nconst TextEditor = () => {\n  _s();\n  const {\n    id: documentId\n  } = useParams();\n  const [socket, setSocket] = useState(null);\n  const [quill, setQuill] = useState(null);\n  const history = useHistory();\n\n  // Set up socket connection with the server\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const s = io(\"http://localhost:3002\", {\n      query: {\n        token\n      }\n    });\n    // Handle unauthorized access by redirecting to the login page\n    s.on(\"unauthorized\", error => {\n      console.error(\"Unauthorized. Redirecting to login page:\", error);\n      history.push(\"/login\");\n    });\n    // Set the socket in the component state\n    setSocket(s);\n\n    // Clean up the socket connection on component unmount\n    return () => {\n      s.disconnect();\n    };\n  }, [history]);\n\n  // Load document content from the server when the documentId changes\n  useEffect(() => {\n    if (!socket || !quill) return;\n    socket.once(\"load-document\", document => {\n      quill.setContents(document);\n      quill.enable();\n    });\n    socket.emit(\"get-document\", documentId);\n  }, [socket, quill, documentId]);\n\n  // Periodically save the document content to the server\n  useEffect(() => {\n    if (!socket || !quill) return;\n    const interval = setInterval(() => {\n      socket.emit(\"save-document\", quill.getContents());\n    }, SAVE_INTERVAL_MS);\n\n    // Clean up the interval on component unmount\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, quill]);\n\n  // Receive changes from other users and update the document\n  useEffect(() => {\n    if (!socket || !quill) return;\n\n    // Define a handler function for receiving changes from other users\n    const receiveChangesHandler = (delta, userId, username, cursorPosition) => {\n      console.log(userId, username, cursorPosition, \"------------\");\n      quill.updateContents(delta);\n      const cursors = quill.getModule(\"cursors\");\n      if (cursors) {\n        cursors.moveCursor(userId, cursorPosition, username);\n      }\n    };\n    // Set up a socket event listener for \"receive-changes\" event\n    socket.on(\"receive-changes\", receiveChangesHandler);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      socket.off(\"receive-changes\", receiveChangesHandler);\n    };\n  }, [socket, quill]);\n\n  // Initialize Quill editor inside the wrapper element\n  const wrapperRef = useCallback(wrapper => {\n    if (!wrapper) return;\n\n    // Clear the content of the wrapper element\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n\n    // Register the QuillCursors module for collaborative editing\n    Quill.register(\"modules/cursors\", QuillCursors);\n    // Create a new Quill editor instance within the editor div\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: TOOLBAR_OPTIONS,\n        cursors: true\n      }\n    });\n\n    // Disable the Quill editor initially\n    q.disable();\n    q.setText(\"Loading...\");\n    const observer = new MutationObserver(() => {\n      q.update();\n    });\n\n    // Observe changes to the wrapper and update the Quill editor\n    observer.observe(wrapper, {\n      childList: true\n    });\n    setQuill(q);\n  }, []);\n\n  // Set up collaborative cursors\n  useEffect(() => {\n    if (!quill) return;\n    const cursors = quill.getModule(\"cursors\");\n    if (cursors) {\n      quill.on(\"selection-change\", (range, source) => {\n        if (source === \"user\") return;\n        const userId = localStorage.getItem(\"userId\");\n        const username = localStorage.getItem(\"username\");\n        cursors.createCursor(userId, username, range, userId);\n      });\n    }\n  }, [quill]);\n\n  // Send user's changes to the server\n  useEffect(() => {\n    if (!socket || !quill) return;\n    const sendChangesHandler = (delta, oldDelta, source) => {\n      if (source !== \"user\") return;\n      const userId = localStorage.getItem(\"userId\");\n      const username = localStorage.getItem(\"username\");\n      const cursorPosition = quill.getSelection();\n      console.log(\"----->>>>\", userId, username, cursorPosition);\n      socket.emit(\"send-changes\", delta, userId, username, cursorPosition);\n    };\n    quill.on(\"text-change\", sendChangesHandler);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      quill.off(\"text-change\", sendChangesHandler);\n    };\n  }, [socket, quill]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 10\n  }, this);\n};\n_s(TextEditor, \"slStjJoMyA/Uk+rzsNn4Evj05kg=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = TextEditor;\nexport default TextEditor;\nvar _c;\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","Quill","io","useParams","useHistory","QuillCursors","jsxDEV","_jsxDEV","SAVE_INTERVAL_MS","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","TextEditor","_s","id","documentId","socket","setSocket","quill","setQuill","history","token","localStorage","getItem","s","query","on","error","console","push","disconnect","once","document","setContents","enable","emit","interval","setInterval","getContents","clearInterval","receiveChangesHandler","delta","userId","username","cursorPosition","log","updateContents","cursors","getModule","moveCursor","off","wrapperRef","wrapper","innerHTML","editor","createElement","append","register","q","theme","modules","toolbar","disable","setText","observer","MutationObserver","update","observe","childList","range","source","createCursor","sendChangesHandler","oldDelta","getSelection","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/divyanitesh/Desktop/floData/GoogleDocs/client/src/TextEditor.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from \"socket.io-client\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport QuillCursors from \"quill-cursors\"; \n\n// Time interval for periodically saving the document to the server\nconst SAVE_INTERVAL_MS = 2000;\n\n// Options for the Quill editor's toolbar configuration\nconst TOOLBAR_OPTIONS = [\n  [{ header: [1, 2, 3, 4, 5, 6, false] }], \n  [{ font: [] }],\n  [{ list: \"ordered\" }, { list: \"bullet\" }], \n  [\"bold\", \"italic\", \"underline\"], \n  [{ color: [] }, { background: [] }], \n  [{ script: \"sub\" }, { script: \"super\" }], \n  [{ align: [] }], \n  [\"image\", \"blockquote\", \"code-block\"], \n  [\"clean\"], \n];\n\nconst TextEditor = () => {\n  const { id: documentId } = useParams();\n  const [socket, setSocket] = useState(null);\n  const [quill, setQuill] = useState(null);\n  const history = useHistory();\n\n  // Set up socket connection with the server\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const s = io(\"http://localhost:3002\", {\n      query: { token },\n    });\n    // Handle unauthorized access by redirecting to the login page\n    s.on(\"unauthorized\", (error) => {\n      console.error(\"Unauthorized. Redirecting to login page:\", error);\n      history.push(\"/login\");\n    });\n     // Set the socket in the component state\n    setSocket(s);\n\n    // Clean up the socket connection on component unmount\n    return () => {\n      s.disconnect();\n    };\n  }, [history]);\n\n  // Load document content from the server when the documentId changes\n  useEffect(() => {\n    if (!socket || !quill) return;\n\n    socket.once(\"load-document\", (document) => {\n      quill.setContents(document);\n      quill.enable();\n    });\n\n    socket.emit(\"get-document\", documentId);\n  }, [socket, quill, documentId]);\n\n  // Periodically save the document content to the server\n  useEffect(() => {\n    if (!socket || !quill) return;\n\n    const interval = setInterval(() => {\n      socket.emit(\"save-document\", quill.getContents());\n    }, SAVE_INTERVAL_MS);\n\n    // Clean up the interval on component unmount\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, quill]);\n\n  // Receive changes from other users and update the document\n  useEffect(() => {\n    if (!socket || !quill) return;\n\n    // Define a handler function for receiving changes from other users\n    const receiveChangesHandler = (delta, userId, username, cursorPosition) => {\n      console.log(userId, username, cursorPosition, \"------------\");\n      quill.updateContents(delta);\n\n      const cursors = quill.getModule(\"cursors\");\n      if (cursors) {\n        cursors.moveCursor(userId, cursorPosition, username);\n      }\n    };\n     // Set up a socket event listener for \"receive-changes\" event\n    socket.on(\"receive-changes\", receiveChangesHandler);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      socket.off(\"receive-changes\", receiveChangesHandler);\n    };\n  }, [socket, quill]);\n\n  // Initialize Quill editor inside the wrapper element\n  const wrapperRef = useCallback((wrapper) => {\n    if (!wrapper) return;\n\n   // Clear the content of the wrapper element\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n\n    // Register the QuillCursors module for collaborative editing\n    Quill.register(\"modules/cursors\", QuillCursors); \n    // Create a new Quill editor instance within the editor div\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: { toolbar: TOOLBAR_OPTIONS, cursors: true },\n    });\n\n    // Disable the Quill editor initially\n    q.disable();\n    q.setText(\"Loading...\");\n\n    const observer = new MutationObserver(() => {\n      q.update();\n    });\n\n    // Observe changes to the wrapper and update the Quill editor\n    observer.observe(wrapper, { childList: true });\n\n    setQuill(q);\n  }, []);\n\n  // Set up collaborative cursors\n  useEffect(() => {\n    if (!quill) return;\n\n    const cursors = quill.getModule(\"cursors\");\n    if (cursors) {\n      quill.on(\"selection-change\", (range, source) => {\n        if (source === \"user\") return;\n        const userId = localStorage.getItem(\"userId\");\n        const username = localStorage.getItem(\"username\");\n        cursors.createCursor(userId, username, range, userId);\n      });\n    }\n  }, [quill]);\n\n  // Send user's changes to the server\n  useEffect(() => {\n    if (!socket || !quill) return;\n\n    const sendChangesHandler = (delta, oldDelta, source) => {\n      if (source !== \"user\") return;\n      const userId = localStorage.getItem(\"userId\");\n      const username = localStorage.getItem(\"username\");\n      const cursorPosition = quill.getSelection();\n      console.log(\"----->>>>\", userId, username, cursorPosition);\n      socket.emit(\"send-changes\", delta, userId, username, cursorPosition);\n    };\n    quill.on(\"text-change\", sendChangesHandler);\n\n    // Clean up the event listener on component unmount\n    return () => {\n      quill.off(\"text-change\", sendChangesHandler);\n    };\n  }, [socket, quill]);\n\n  return <div className=\"container\" ref={wrapperRef} />;\n};\n\nexport default TextEditor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}