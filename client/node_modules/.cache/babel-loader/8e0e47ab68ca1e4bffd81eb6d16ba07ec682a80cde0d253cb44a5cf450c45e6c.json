{"ast":null,"code":"var _jsxFileName = \"/Users/divyanitesh/Desktop/AllInterviewProjects/floData/GoogleDocs/client/src/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  onLogout\n}) => {\n  _s();\n  const [userBooks, setUserBooks] = useState([]);\n  const [newBook, setNewBook] = useState({\n    title: \"\",\n    author: \"\"\n  });\n  const [selectedBook, setSelectedBook] = useState(null);\n  useEffect(() => {\n    // Fetch user's books after component mounts\n    fetchUserBooks();\n  }, []);\n  const fetchUserBooks = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.error(\"No token found\");\n        return;\n      }\n      const response = await axios.get(\"http://localhost:3002/api/books/user\", {\n        headers: {\n          Authorization: `${token}`\n        }\n      });\n\n      // Extract user's books from the response\n      setUserBooks(response.data.userBooks);\n    } catch (error) {\n      console.error(\"Error fetching user's books\", error);\n    }\n  };\n  const handleLogout = () => {\n    // Call the onLogout prop to perform the logout action\n    onLogout();\n  };\n  const handlePublish = async event => {\n    event.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.error(\"No token found\");\n        return;\n      }\n\n      // Make API call to publish the new book\n      await axios.post(\"http://localhost:3002/api/books/publish\", {\n        title: newBook.title,\n        author: newBook.author\n      }, {\n        headers: {\n          Authorization: `${token}`\n        }\n      });\n\n      // After successful publishing, fetch updated user's books\n      fetchUserBooks();\n\n      // Clear the form fields\n      setNewBook({\n        title: \"\",\n        author: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error publishing book\", error);\n    }\n  };\n  const handleUpdate = async event => {\n    event.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        console.error(\"No token found\");\n        return;\n      }\n\n      // Make API call to update the selected book\n      await axios.put(`http://localhost:3002/api/books/update/${selectedBook._id}`, {\n        title: selectedBook.title,\n        author: selectedBook.author\n      }, {\n        headers: {\n          Authorization: `${token}`\n        }\n      });\n\n      // After successful update, fetch updated user's books\n      fetchUserBooks();\n\n      // Clear the selectedBook state\n      setSelectedBook(null);\n    } catch (error) {\n      console.error(\"Error updating book\", error);\n    }\n  };\n  const handleSelectBook = book => {\n    // Set the selected book for updating\n    setSelectedBook(book);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: {\n          marginLeft: \"auto\"\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Books\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), userBooks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No books found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: userBooks.map(book => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), \" \", book.title, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Author:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 55\n          }, this), \" \", book.author, \", \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Published:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 32\n          }, this), \" \", book.published ? \"Yes\" : \"No\", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleSelectBook(book),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, book._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [selectedBook ? \"Update\" : \"Publish\", \" a Book\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: selectedBook ? handleUpdate : handlePublish,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"title\",\n          value: selectedBook ? selectedBook.title : newBook.title,\n          onChange: e => {\n            if (selectedBook) {\n              setSelectedBook({\n                ...selectedBook,\n                title: e.target.value\n              });\n            } else {\n              setNewBook({\n                ...newBook,\n                title: e.target.value\n              });\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"author\",\n          children: \"Author:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"author\",\n          value: selectedBook ? selectedBook.author : newBook.author,\n          onChange: e => {\n            if (selectedBook) {\n              setSelectedBook({\n                ...selectedBook,\n                author: e.target.value\n              });\n            } else {\n              setNewBook({\n                ...newBook,\n                author: e.target.value\n              });\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: selectedBook ? \"Update\" : \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"4JRjpahLlkcPRkGj+HgrZC0j770=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Dashboard","onLogout","_s","userBooks","setUserBooks","newBook","setNewBook","title","author","selectedBook","setSelectedBook","fetchUserBooks","token","localStorage","getItem","console","error","response","get","headers","Authorization","data","handleLogout","handlePublish","event","preventDefault","post","handleUpdate","put","_id","handleSelectBook","book","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginLeft","length","map","published","onSubmit","htmlFor","type","id","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/divyanitesh/Desktop/AllInterviewProjects/floData/GoogleDocs/client/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst Dashboard = ({ onLogout }) => {\n  const [userBooks, setUserBooks] = useState([]);\n  const [newBook, setNewBook] = useState({ title: \"\", author: \"\" });\n  const [selectedBook, setSelectedBook] = useState(null);\n\n  useEffect(() => {\n    // Fetch user's books after component mounts\n    fetchUserBooks();\n  }, []);\n\n  const fetchUserBooks = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        console.error(\"No token found\");\n        return;\n      }\n\n      const response = await axios.get(\"http://localhost:3002/api/books/user\", {\n        headers: {\n          Authorization: `${token}`,\n        },\n      });\n\n      // Extract user's books from the response\n      setUserBooks(response.data.userBooks);\n    } catch (error) {\n      console.error(\"Error fetching user's books\", error);\n    }\n  };\n\n  const handleLogout = () => {\n    // Call the onLogout prop to perform the logout action\n    onLogout();\n  };\n\n  const handlePublish = async (event) => {\n    event.preventDefault();\n\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        console.error(\"No token found\");\n        return;\n      }\n\n      // Make API call to publish the new book\n      await axios.post(\n        \"http://localhost:3002/api/books/publish\",\n        { title: newBook.title, author: newBook.author },\n        {\n          headers: {\n            Authorization: `${token}`,\n          },\n        }\n      );\n\n      // After successful publishing, fetch updated user's books\n      fetchUserBooks();\n\n      // Clear the form fields\n      setNewBook({ title: \"\", author: \"\" });\n    } catch (error) {\n      console.error(\"Error publishing book\", error);\n    }\n  };\n\n  const handleUpdate = async (event) => {\n    event.preventDefault();\n\n    try {\n      const token = localStorage.getItem(\"token\");\n\n      if (!token) {\n        console.error(\"No token found\");\n        return;\n      }\n\n      // Make API call to update the selected book\n      await axios.put(\n        `http://localhost:3002/api/books/update/${selectedBook._id}`,\n        { title: selectedBook.title, author: selectedBook.author },\n        {\n          headers: {\n            Authorization: `${token}`,\n          },\n        }\n      );\n\n      // After successful update, fetch updated user's books\n      fetchUserBooks();\n\n      // Clear the selectedBook state\n      setSelectedBook(null);\n    } catch (error) {\n      console.error(\"Error updating book\", error);\n    }\n  };\n\n  const handleSelectBook = (book) => {\n    // Set the selected book for updating\n    setSelectedBook(book);\n  };\n\n  return (\n    <div>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\n        <h2>Dashboard</h2>\n        <button onClick={handleLogout} style={{ marginLeft: \"auto\" }}>\n          Logout\n        </button>\n      </div>\n      <div>\n        <h3>Your Books</h3>\n        {userBooks.length === 0 ? (\n          <p>No books found</p>\n        ) : (\n          <ul>\n            {userBooks.map((book) => (\n              <li key={book._id}>\n                <strong>Title:</strong> {book.title}, <strong>Author:</strong>{\" \"}\n                {book.author}, <strong>Published:</strong>{\" \"}\n                {book.published ? \"Yes\" : \"No\"}{\" \"}\n                <button onClick={() => handleSelectBook(book)}>Update</button>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      <div>\n        <h3>{selectedBook ? \"Update\" : \"Publish\"} a Book</h3>\n        <form onSubmit={selectedBook ? handleUpdate : handlePublish}>\n          <label htmlFor=\"title\">Title:</label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            value={selectedBook ? selectedBook.title : newBook.title}\n            onChange={(e) => {\n              if (selectedBook) {\n                setSelectedBook({ ...selectedBook, title: e.target.value });\n              } else {\n                setNewBook({ ...newBook, title: e.target.value });\n              }\n            }}\n          />\n\n          <label htmlFor=\"author\">Author:</label>\n          <input\n            type=\"text\"\n            id=\"author\"\n            value={selectedBook ? selectedBook.author : newBook.author}\n            onChange={(e) => {\n              if (selectedBook) {\n                setSelectedBook({ ...selectedBook, author: e.target.value });\n              } else {\n                setNewBook({ ...newBook, author: e.target.value });\n              }\n            }}\n          />\n\n          <button type=\"submit\">{selectedBook ? \"Update\" : \"Publish\"}</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}